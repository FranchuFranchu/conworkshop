- provide(:page_title, t('.title'))
- provide(:page_colour, 'orange')

= left_col class: 'bg-light', width: 4 do

  h2 = t('.info.title')

  = link_to profile_path(current_user), class: 'btn btn-link mb-3'
    i.fas.fa-chevron-circle-left
    = t('general.return.profile')

  dl
    dt = t('.info.registered')
    dd = cws_local_time(current_user.created_at)

  dl
    dt = t('.info.confirmed')
    dd = cws_local_time(current_user.confirmed_at)

  dl
    dt = t('.info.accountlastupdate')
    dd = cws_local_time(current_user.updated_at)

  dl
    dt = t('.info.profilelastupdate')
    dd = cws_local_time(current_user.profile.updated_at)

  dl
    dt = t('.info.lastlogin.title')
    dd = sanitize(t('.info.lastlogin.text',
            time: cws_local_time(current_user.last_sign_in_at), ip: current_user.last_sign_in_ip), tags: [:time])

  dl
    dt = t('.info.authtype.title')
    dd
      - if current_user.auth_type == 2 # standard+facebook flag
        = t('.info.authtype.both')
      - elsif current_user.provider.present? # facebook
        = t('.info.authtype.fb')
      - else # standard
        = t('.info.authtype.std')

  dl
    dt = t('.info.timezone')
    dd = current_user.timezone

= right_col width: 8 do

  h3.mb-3 = t('.settings.title')

  = form_for current_user, url: { controller: 'account', action: 'update' } do |f|
    = render 'error_messages', cur_obj: current_user

    .form-group
      = f.label :pseudonym, class: 'little-label'
      = f.text_field :pseudonym, size: 38, class: 'form-control'
      small.form-text.text-muted
        => t('general.minchars', count: User::USERNAME_LEN.begin)
        = t('.settings.revertuname')

    .form-group
      = f.label :email, class: 'little-label'
      = f.email_field :email, size: 38, class: 'form-control'
      small.form-text.text-muted = t('.settings.emailwarn')

    h4.mt-4.mb-3 = t('.settings.changepass')

    .form-group
      = f.label :password, class: 'little-label'
      = f.password_field :password, autocomplete: 'off', size: 38, class: 'form-control'
      small.form-text.text-muted
        => t('.settings.passwarn', count: Devise.password_length.begin)
        = t('.settings.passblank')

    .form-group
      = f.label :password_confirmation, class: 'little-label'
      = f.password_field :password_confirmation, autocomplete: 'off', size: 38, class: 'form-control'
      small.form-text.text-muted = t('.settings.passconfirm')

    = f.button :submit, class: 'btn btn-primary mt-2'
      i.far.fa-save
      = t('general.save')